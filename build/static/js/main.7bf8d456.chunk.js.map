{"version":3,"sources":["NEU-logo.png","reducers/RootReducer.js","reducers/FilterByReducer.js","components/Filters.js","components/CloroplethMap.js","components/CustomBarChart.js","components/DisplayComponent.js","components/Header.js","components/FilterBy.js","components/Home.js","components/LeftSideBar.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","combineReducers","filterByReducer","state","arguments","length","undefined","dimension","action","type","Object","objectSpread","value","Filters","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Range","createSliderWithTooltip","Slider","Handle","wrapperStyle","width","margin","react_default","a","createElement","style","rc_slider_es","min","max","defaultValue","handle","dragging","index","restProps","objectWithoutProperties","rc_tooltip_es","prefixCls","overlay","visible","placement","key","assign","marks","10","20","30","40","50","60","70","80","90","100","step","tipFormatter","concat","Component","connect","ChoroplethMap","dataset","onlyValues","data","map","obj","minValue","Math","apply","maxValue","paletteScale","d3","scale","linear","domain","range","forEach","item","iso","numberOfThings","fillColor","Datamap","element","document","getElementById","scope","geographyConfig","popupOnHover","highlightOnHover","borderColor","highlightBorderWidth","borderWidth","dataJson","UsaJson","popupTemplate","geo","properties","name","join","fills","HIGH","LOW","MEDIUM","UNKNOWN","defaultFill","setProjection","projection","mercator","center","translate","offsetWidth","offsetHeight","path","id","height","CustomBarChart","BarChart","uv","pv","amt","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","DisplayComponent","_this","displayComponent","handleClick","bind","assertThisInitialized","newState","setState","display","_this2","components_CustomBarChart","CloroplethMap","className","onClick","alignItems","justifyContent","components_Filters","divStyle","float","Header","src","logo","alt","Fragment","FilterBy","params","setDimension","e","dispatch","target","checked","Home","components_Header","components_FilterBy","components_DisplayComponent","LeftSideBar","collection","console","log","defineProperty","sidebarData","statesData","keys","nextProps","citiesData","countiesData","i","attr","App","components_Home","components_LeftSideBar","Boolean","window","location","hostname","match","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7bf8d456.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NEU-logo.b5548a76.png\";","import { combineReducers } from 'redux';\nimport filterByReducer from './FilterByReducer';\nexport default combineReducers({\n  filterByReducer\n});\n","export default (state = { dimension: 'State' }, action) => {\n  switch (action.type) {\n    case 'CHANGE_DIMENSION':\n      return {\n        ...state,\n        dimension: action.value\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Component } from 'react';\nimport Tooltip from 'rc-tooltip';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport { connect } from 'react-redux';\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const createSliderWithTooltip = Slider.createSliderWithTooltip;\n    const Range = createSliderWithTooltip(Slider.Range);\n    const Handle = Slider.Handle;\n\n    const handle = props => {\n      const { value, dragging, index, ...restProps } = props;\n      return (\n        <Tooltip\n          prefixCls=\"rc-slider-tooltip\"\n          overlay={value}\n          visible={dragging}\n          placement=\"top\"\n          key={index}\n        >\n          <Handle value={value} {...restProps} />\n        </Tooltip>\n      );\n    };\n\n    const wrapperStyle = { width: 400, margin: 50 };\n\n    return (\n      <div>\n        <div style={wrapperStyle}>\n          <p>Income</p>\n          <Slider min={0} max={100000} defaultValue={50000} handle={handle} />\n        </div>\n        <div style={wrapperStyle}>\n          <p>Income</p>\n          <Slider\n            min={0}\n            defaultValue={50000}\n            marks={{\n              10: 10000,\n              20: 20000,\n              30: 30000,\n              40: 40000,\n              50: 50000,\n              60: 60000,\n              70: 70000,\n              80: 80000,\n              90: 90000,\n              100: 100000\n            }}\n            step={null}\n          />\n        </div>\n        <div style={wrapperStyle}>\n          <p>Income</p>\n          <Range\n            min={0}\n            max={100000}\n            defaultValue={[20000, 50000]}\n            tipFormatter={value => `${value}%`}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  dimension: state.filterByReducer.dimension\n});\n\nexport default connect(mapState)(Filters);\n","import React, { Component } from 'react';\nimport Datamap from 'datamaps/dist/datamaps.world.min.js';\nimport d3 from 'd3';\nimport UsaJson from '../maps/Usa.topo.json';\nimport { connect } from 'react-redux';\n\nclass ChoroplethMap extends Component {\n  componentDidMount() {\n    let dataset = {};\n\n    let onlyValues = this.props.data.map(function(obj) {\n      return obj[1];\n    });\n    let minValue = Math.min.apply(null, onlyValues),\n      maxValue = Math.max.apply(null, onlyValues);\n\n    let paletteScale = d3.scale\n      .linear()\n      .domain([minValue, maxValue])\n      .range(['#EFEFFF', '#02386F']);\n\n    this.props.data.forEach(function(item) {\n      //\n      let iso = item[0],\n        value = item[1];\n      dataset[iso] = { numberOfThings: value, fillColor: paletteScale(value) };\n    });\n\n    let map = new Datamap({\n      element: document.getElementById('cloropleth_map'),\n      scope: 'Usa',\n      geographyConfig: {\n        popupOnHover: true,\n        highlightOnHover: true,\n        borderColor: '#444',\n        highlightBorderWidth: 1,\n        borderWidth: 0.5,\n        dataJson: UsaJson,\n        popupTemplate: function(geo, data) {\n          // don't show tooltip if country don't present in dataset\n          if (!data) {\n            return;\n          }\n          return [\n            '<div class=\"hoverinfo\">',\n            '<strong>',\n            geo.properties.name,\n            '</strong>',\n            '<br>Count: <strong>',\n            data.numberOfThings,\n            '</strong>',\n            '</div>'\n          ].join('');\n        }\n      },\n      fills: {\n        HIGH: '#afafaf',\n        LOW: '#123456',\n        MEDIUM: 'blue',\n        UNKNOWN: 'rgb(0,0,0)',\n        defaultFill: '#eee'\n      },\n      data: dataset,\n      setProjection: function(element) {\n        var projection = d3.geo\n          .mercator()\n          .center([-98.123152, 38.1304])\n          .scale(450)\n          .translate([element.offsetWidth / 2, element.offsetHeight / 2]);\n\n        var path = d3.geo.path().projection(projection);\n        return { path: path, projection: projection };\n      }\n    });\n  }\n  render() {\n    return (\n      <div\n        id=\"cloropleth_map\"\n        style={{\n          height: '100%',\n          width: '100%'\n        }}\n      />\n    );\n  }\n}\n\nconst mapState = state => ({\n  dimension: state.filterByReducer.dimension\n});\n\nexport default connect(mapState)(ChoroplethMap);\n","import React, { Component } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { connect } from 'react-redux';\n\nclass CustomBarChart extends Component {\n  render() {\n    return (\n      <BarChart\n        width={600}\n        height={300}\n        data={[\n          { name: 'California', uv: 4000, pv: 2400, amt: 2400 },\n          { name: 'Texas', uv: 3000, pv: 1398, amt: 2210 },\n          { name: 'Florida', uv: 2000, pv: 9800, amt: 2290 },\n          { name: 'Alaska', uv: 1890, pv: 4800, amt: 2181 },\n          { name: 'Washington', uv: 2390, pv: 3800, amt: 2500 },\n          { name: 'Ohio', uv: 3490, pv: 4300, amt: 2100 }\n        ]}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n      </BarChart>\n    );\n  }\n}\n\nconst mapState = state => ({\n  dimension: state.filterByReducer.dimension\n});\n\nexport default connect(mapState)(CustomBarChart);\n","import React, { Component } from 'react';\nimport '../styles/DisplayComponent.css';\nimport Filters from './Filters';\nimport CloroplethMap from './CloroplethMap';\nimport CustomBarChart from './CustomBarChart';\nimport { connect } from 'react-redux';\n\nclass DisplayComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { displayComponent: 'Map' };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(newState) {\n    this.setState({ displayComponent: newState });\n  }\n\n  render() {\n    var display;\n    if (this.state.displayComponent === 'Chart') {\n      display = <CustomBarChart />;\n    } else {\n      display = <CloroplethMap data={[['CA', 70]]} />;\n    }\n    return (\n      <div>\n        <button\n          className=\"DisplayButtons\"\n          onClick={() => this.handleClick('Map')}\n        >\n          {' '}\n          Map{' '}\n        </button>\n        <button\n          className=\"DisplayButtons\"\n          onClick={() => this.handleClick('Chart')}\n        >\n          {' '}\n          Chart{' '}\n        </button>\n        <div className=\"DisplayArea\">{display}</div>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          <Filters />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  dimension: state.filterByReducer.dimension\n});\n\nexport default connect(mapState)(DisplayComponent);\n","import React, { Component } from 'react';\nimport '../styles/Header.css';\nimport logo from '../NEU-logo.png';\nimport { connect } from 'react-redux';\n\nconst divStyle = {\n  width: '50px',\n  height: '50px',\n  float: 'left'\n};\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <img style={divStyle} src={logo} alt=\"My logo\" />\n        <>&nbsp;TruthTree</>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  dimension: state.filterByReducer.dimension\n});\n\nexport default connect(mapState)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../styles/FilterBy.css';\n\nclass FilterBy extends Component {\n  constructor(params) {\n    super(params);\n    this.setDimension = this.setDimension.bind(this);\n  }\n\n  setDimension(e) {\n    this.props.dispatch({\n      type: 'CHANGE_DIMENSION',\n      value: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"FilterBy\">\n        Select the dimension to be filtered by:\n        <div className=\"RadioButtons\">\n          <input\n            type=\"radio\"\n            checked={this.props.dimension === 'City'}\n            onClick={this.setDimension}\n            value=\"City\"\n          />{' '}\n          City &nbsp;\n          <input\n            type=\"radio\"\n            checked={this.props.dimension === 'County'}\n            onClick={this.setDimension}\n            value=\"County\"\n          />{' '}\n          County &nbsp;\n          <input\n            type=\"radio\"\n            checked={this.props.dimension === 'State'}\n            onClick={this.setDimension}\n            value=\"State\"\n          />{' '}\n          State\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  dimension: state.filterByReducer.dimension\n});\n\nconst mapDispatch = dispatch => ({ dispatch });\nexport default connect(\n  mapState,\n  mapDispatch\n)(FilterBy);\n","import React, { Component } from 'react';\nimport DisplayComponent from './DisplayComponent';\nimport Header from './Header';\nimport FilterBy from './FilterBy';\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n\n        <FilterBy />\n\n        <DisplayComponent />\n      </div>\n    );\n  }\n}\nconst mapState = state => ({\n  dimension: state.filterByReducer.dimension\n});\n\nexport default connect(mapState)(Home);\n","import React, { Component } from 'react';\nimport '../styles/LeftSideBar.css';\n\nimport citiesData from '../../src/testStuff/cities.json';\nimport statesData from '../../src/testStuff/states.json';\nimport countiesData from '../../src/testStuff/counties.json';\nimport { connect } from 'react-redux';\n\nimport { combineReducers, createStore } from 'redux';\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    //   /api/collections?level=state\n    this.state = { sidebarData: statesData };\n    // Set initial state of each collection to false\n    Object.keys(this.state.sidebarData).map(key => (this.state[key] = false));\n  }\n  /*\n    componentDidMount() {\n        fetch('https://truthtree.herokuapp.com/api/states')\n            .then(res => res.json())\n            .then(json => {\n                this.setState{sidebarData:statesData}\n            })\n    }*/\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.dimension === 'State') {\n      this.setState({ sidebarData: statesData });\n    } else if (nextProps.dimension === 'City') {\n      this.setState({ sidebarData: citiesData });\n    } else this.setState({ sidebarData: countiesData });\n  }\n\n  // Toggle state of each collection on click\n  handleClick = collection => {\n    console.log('Clicked!!', collection, this.state[collection]);\n    this.setState({ [collection]: !this.state[collection] });\n  };\n\n  render() {\n    return (\n      <div>\n        {Object.keys(this.state.sidebarData).map((collection, i) => {\n          return (\n            <div>\n              <div\n                className=\"accordion\"\n                onClick={() => this.handleClick(collection)}\n              >\n                {collection}\n              </div>\n              <div\n                style={{ display: this.state[collection] ? 'block' : 'none' }}\n              >\n                {Object.keys(this.state.sidebarData[collection]).map(\n                  (attr, i) => {\n                    return (\n                      <label className=\"panel\">\n                        <p>\n                          {attr}\n                          <label className=\"switch rightSide\">\n                            <input type=\"checkbox\" />\n                            <span className=\"slider round\" />\n                          </label>\n                        </p>\n                      </label>\n                    );\n                  }\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  dimension: state.filterByReducer.dimension\n});\n\nexport default connect(mapState)(LeftSideBar);\n","import React, { Component } from 'react';\n\nimport Home from './components/Home';\nimport LeftSideBar from './components/LeftSideBar';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Home />\n        <LeftSideBar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport FilterByReducer from './reducers/FilterByReducer';\nimport RootReducer from './reducers/RootReducer';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}